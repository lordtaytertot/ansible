---
# tasks file for ryu
- name: copy Ryujinx.svg to /usr/share/icons/
  become: true
  copy:
    src: Ryujinx.svg
    dest: /usr/share/icons/
    owner: root
    group: root
    mode: 0644
  notify: run update-desktop-database

- name: copy Ryujinx.desktop to /usr/share/applications/
  become: true
  copy:
    src: Ryujinx.desktop
    dest: /usr/share/applications/
    owner: root
    group: root
    mode: 0644
  notify: run update-desktop-database

- name: make ${HOME}/.local/bin/ directory
  file:
    path: "{{ ansible_env.HOME }}/.local/bin/"
    state: directory

- name: stat ${HOME}/.local/bin/Ryujinx.sh
  stat:
    path: "{{ ansible_env.HOME }}/.local/bin/Ryujinx.sh"
  register: stat_ryu_result

- name: extract Ryujinx
  unarchive:
    src: ryujinx-1.1.1403-linux_x64.tar.gz
    dest: "{{ ansible_env.HOME }}/.local/bin/"
    extra_opts: --strip-components=1
  when: stat_ryu_result.stat.exists == false

- name: make ${HOME}/.config/Ryujinx/system/ directory
  file:
    path: "{{ ansible_env.HOME }}/.config/Ryujinx/system/"
    state: directory

- name: copy prod.keys
  copy:
    src: prod.keys
    dest: "{{ ansible_env.HOME }}/.config/Ryujinx/system/"

- name: copy Config.json
  copy:
    src: Config.json
    dest: "{{ ansible_env.HOME }}/.config/Ryujinx/"

- name: stat ${HOME}/ROMs
  stat:
    path: "{{ ansible_env.HOME }}/ROMs"
  register: stat_ROMs_result

- name: make ${HOME}/ROMs/ directory
  file:
    path: "{{ ansible_env.HOME }}/"
    state: directory
  when: stat_ROMs_result.stat.exists == false

- name: copy ROMs
  copy:
    src: /mnt/raid/Archive/Gaming/Nintendo Switch/ROMs/
    dest: "{{ ansible_env.HOME }}/ROMs"
  when: stat_ROMs_result.stat.exists == false
